// <auto-generated />
using System;
using AutomobileServiceCenter_MasterDetailsInAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomobileServiceCenter_MasterDetailsInAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240827163307_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutomobileServiceCenter_MasterDetailsInAPI.Models.AppointDetail", b =>
                {
                    b.Property<int>("AppointDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointDetailId"));

                    b.Property<int>("AppointId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("AppointDetailId");

                    b.HasIndex("AppointId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AppointDetails");

                    b.HasData(
                        new
                        {
                            AppointDetailId = 1,
                            AppointId = 1,
                            Price = 100m,
                            Quantity = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            AppointDetailId = 2,
                            AppointId = 1,
                            Price = 200m,
                            Quantity = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            AppointDetailId = 3,
                            AppointId = 2,
                            Price = 300m,
                            Quantity = 3,
                            ServiceId = 3
                        });
                });

            modelBuilder.Entity("AutomobileServiceCenter_MasterDetailsInAPI.Models.AppointMaster", b =>
                {
                    b.Property<int>("AppointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointId"));

                    b.Property<DateTime?>("AppointDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsComplete")
                        .HasColumnType("bit");

                    b.HasKey("AppointId");

                    b.ToTable("AppointMasters");

                    b.HasData(
                        new
                        {
                            AppointId = 1,
                            AppointDate = new DateTime(2024, 8, 27, 22, 33, 4, 600, DateTimeKind.Local).AddTicks(9591),
                            CustomerName = "Sharmin Shumi",
                            ImagePath = "image1.jpg",
                            IsComplete = true
                        },
                        new
                        {
                            AppointId = 2,
                            AppointDate = new DateTime(2024, 8, 26, 22, 33, 4, 600, DateTimeKind.Local).AddTicks(9609),
                            CustomerName = "Nazmul Alam",
                            ImagePath = "image2.jpg",
                            IsComplete = false
                        });
                });

            modelBuilder.Entity("AutomobileServiceCenter_MasterDetailsInAPI.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            ServiceName = "Engine Oil Change"
                        },
                        new
                        {
                            ServiceId = 2,
                            ServiceName = "Brake Inspection"
                        },
                        new
                        {
                            ServiceId = 3,
                            ServiceName = "Tire Rotation"
                        },
                        new
                        {
                            ServiceId = 4,
                            ServiceName = "Battery Replacement"
                        },
                        new
                        {
                            ServiceId = 5,
                            ServiceName = "Transmission Repair"
                        },
                        new
                        {
                            ServiceId = 6,
                            ServiceName = "Wheel Alignment"
                        },
                        new
                        {
                            ServiceId = 7,
                            ServiceName = "Air Filter Replacement"
                        },
                        new
                        {
                            ServiceId = 8,
                            ServiceName = "Coolant Flush"
                        },
                        new
                        {
                            ServiceId = 9,
                            ServiceName = "Exhaust Repair"
                        },
                        new
                        {
                            ServiceId = 10,
                            ServiceName = "Suspension Repair"
                        });
                });

            modelBuilder.Entity("AutomobileServiceCenter_MasterDetailsInAPI.Models.AppointDetail", b =>
                {
                    b.HasOne("AutomobileServiceCenter_MasterDetailsInAPI.Models.AppointMaster", "AppointMaster")
                        .WithMany("OrderDetail")
                        .HasForeignKey("AppointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomobileServiceCenter_MasterDetailsInAPI.Models.Service", "Service")
                        .WithMany("Details")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppointMaster");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("AutomobileServiceCenter_MasterDetailsInAPI.Models.AppointMaster", b =>
                {
                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("AutomobileServiceCenter_MasterDetailsInAPI.Models.Service", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
